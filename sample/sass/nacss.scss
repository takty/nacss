/**
 *
 * Style
 *
 * @author Takuto Yanagida
 * @version 2021-12-26
 *
 */


@use 'dist/sass/align/_align';
@use 'dist/sass/container/_container';
@use 'dist/sass/content/_content';
@use 'dist/sass/font/_font';
@use 'dist/sass/form/_form';
@use 'dist/sass/link/_link';
@use 'dist/sass/list/_list';
@use 'dist/sass/tab/_tab';
@use 'dist/sass/table/_table';
@use 'dist/sass/viewer/_viewer';

@forward 'dist/sass/utility/_utility';


:root {
	@include align.property;
	@include container.property;
	@include content.property;
	@include font.property;
	@include form.property;
	@include link.property;
	@include list.property;
	@include tab.property('bar', 'bar');
	@include table.property(true);  // do-use-stripe
	@include viewer.property;

	@include font.font-size-line-height(4);
}

@media print {
	:root {
		@include content.property-print;
	}
}


// -----------------------------------------------------------------------------


.alignleft,
.alignright {
	@include align.float;
}

.alignleft {
	@include align.left;
}

.alignright {
	@include align.right;
}

.aligncenter {
	@include align.center;
}

.alignfull,
.alignwide {
	@include align.overflow;
}

.alignfull {
	@include align.full;
}

.alignwide {
	@include align.wide;
}


// -----------------------------------------------------------------------------


.column-2 {
	--nc-container-min-width: var(--nc-container-min-width-2);
	@include container.card-n;
}

.column-3 {
	@include container.card-3-1;
}

.column-4 {
	@include container.card-4-2-1;
}

.column-5 {
	@include container.card-5-3-2-1;
}

.column-6 {
	@include container.card-6-3-2-1;
}

.column-2-1 {
	--nc-container-min-width: var(--nc-container-min-width-2);
	@include container.card-n;
}

.column-3-1 {
	@include container.card-3-1;
}

.column-4-1 {
	@include container.card-4-1;
}

.column-5-1 {
	@include container.card-5-1;
}

.column-6-1 {
	@include container.card-6-1;
}

.card-2 {
	--nc-container-min-width: var(--nc-container-min-width-2);
	@include container.card-n;
}

.card-3 {
	--nc-container-min-width: var(--nc-container-min-width-3);
	@include container.card-n;
}

.card-4 {
	--nc-container-min-width: var(--nc-container-min-width-4);
	@include container.card-n;
}

.card-5 {
	--nc-container-min-width: var(--nc-container-min-width-5);
	@include container.card-n;
}

.card-6 {
	--nc-container-min-width: var(--nc-container-min-width-6);
	@include container.card-n;
}

.masonry-2 {
	--nc-container-min-width: var(--nc-container-min-width-2);
	@include container.masonry-n;
}

.masonry-3 {
	--nc-container-min-width: var(--nc-container-min-width-3);
	@include container.masonry-n;
}

.masonry-4 {
	--nc-container-min-width: var(--nc-container-min-width-4);
	@include container.masonry-n;
}

.masonry-5 {
	--nc-container-min-width: var(--nc-container-min-width-5);
	@include container.masonry-n;
}

.masonry-6 {
	--nc-container-min-width: var(--nc-container-min-width-6);
	@include container.masonry-n;
}


// -----------------------------------------------------------------------------


:where(main, .stile) {
	@include content.all;

	sub,
	sup {
		font-size: font.font-size(2);
	}
	caption,
	figcaption {
		@include font.font-size-line-height(3);
	}
	code {
		font-family: var(--nc-font-mono);
	}
}

@media print {
	main {
		@include content.print;
	}
}


// -----------------------------------------------------------------------------


@for $i from 1 through 16 {
	[data-nc-font='#{$i}'] {
		@include font.font-size-line-height($i);
	}
}

:where(h1) {
	@include font.font-size-line-height(9);
}
:where(h2) {
	@include font.font-size-line-height(8);
}
:where(h3) {
	@include font.font-size-line-height(7);
}
:where(h4) {
	@include font.font-size-line-height(6);
}
:where(h5) {
	@include font.font-size-line-height(5);
}
:where(h6) {
	@include font.font-size-line-height(4);
}


// -----------------------------------------------------------------------------


:is(
	input,
	button,
	select,
	textarea,
	.form-ctrl-radio,
	.form-ctrl-checkbox,
	.form-ctrl-number,
	.form-ctrl-select,
	.button
):is(:disabled, [disabled]) {
	@include form.disabled;
}

:is(button, input[type='submit' i], input[type='button' i], input[type='reset' i], .button),
input[type='file' i]::file-selector-button {
	@include form.main;
}

:is(
	input[type='text'],
	input[type='password'],
	input[type='url'],
	input[type='email'],
	input[type='tel'],
	input[type='search'],
	input[type='number'],
	input[type='date'],
	input[type='month'],
	input[type='week'],
	input[type='datetime'],
	input[type='datetime-local'],
	select,
	textarea
) {
	@include form.main;
}

input[type='color'] {
	@include form.type-color;
}

input[type='file'] {
	@include form.type-file;
}

input[type='range'] {
	@include form.type-range;
}

input[type='radio'] {
	@include form.radio;
}

input[type='checkbox'] {
	@include form.checkbox;
}

fieldset {
	@include form.fieldset;
}

.form-ctrl-radio,
.form-ctrl-checkbox {
	@include form.wrapper-rad-chk;
}

.form-ctrl-number {
	@include form.wrapper-type-number;
}

.form-ctrl-select {
	@include form.wrapper-select;
}


// -----------------------------------------------------------------------------


span[data-nc-kern *= 's'] {
	letter-spacing: -0.4em;
}

span[data-nc-kern *= 'h'] {
	margin-inline-start: -0.4rem;
}


// -----------------------------------------------------------------------------


a:where(:not([class])) {
	@include link.all;
}


// -----------------------------------------------------------------------------


:is(ul, ol):where(:not([class])) {
	@include list.un-ordered;
}

dl:where(:not([class])) {
	@include list.definition;
}

ul[data-nc-list] {
	@include list.custom;
}


// -----------------------------------------------------------------------------


div:is(.tab-scroll, .pseudo-tab-page) {
	@include tab.scroll('bar');
}

div:is(.tab-stack, .tab-page) {
	@include tab.stack('bar');
}

@media print {
	div.tab-scroll {
		@include tab.scroll-print
	}

	div.tab-stack {
		@include tab.stack-print;
	}
}


// -----------------------------------------------------------------------------


table:where(:not([class]), .is-style-stripes) {
	@include table.appearance;
}

table.is-style-stripes {
	@include table.appearance-stripe;
}

table[data-nc-table-neat] {
	@include table.neat;
}

table[data-nc-table-full] {
	@include table.full;
}

table[data-nc-scroll-right], table[data-nc-scroll-left]  {
	@include table.scroll;
}

table[data-nc-scroll-right]:not([data-nc-scroll-left]) {
	@include table.scroll-right;
}

table[data-nc-scroll-left]:not([data-nc-scroll-right]) {
	@include table.scroll-left;
}

div[data-nc-table-sticky-header-container] {
	@include table.sticky-header-container;
}

div[data-nc-table-sticky-header-table] {
	@include table.appearance-header;
	@include table.sticky-header-table;
}

div[data-nc-table-sticky-scroll-bar] {
	@include table.sticky-scroll-bar;
}

@media print {
	table[data-nc-table-neat] {
		@include table.neat-print;
	}

	table[data-nc-scroll-right], table[data-nc-scroll-left]  {
		@include table.scroll-print;
	}

	div[data-nc-table-sticky-header-container] {
		@include table.sticky-header-container-print;
	}

	div[data-nc-table-sticky-scroll-bar] {
		@include table.sticky-scroll-bar-print;
	}
}


// -----------------------------------------------------------------------------


div[data-nc-viewer] {
	@include viewer.main;
}

div[data-nc-frame-image] {
	@include viewer.image;
}

div[data-nc-frame-iframe] {
	@include viewer.iframe;
}
